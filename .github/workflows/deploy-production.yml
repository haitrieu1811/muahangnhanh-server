name: Deploy Production

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 22.20.0
      #     cache: "npm"
      - name: Create .env file
        run: echo "${{secrets.ENV_PRODUCTION}}" > .env.production
      - name: Build Docker image
        run: docker build --platform linux/amd64 -t haitrieu1811/muahangnhanh-server:v0 .
      - name: Login to Dockerhub
        run: docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push Docker image to Dockerhub
        run: docker push haitrieu1811/muahangnhanh-server:v0
      # - run: npm i --force
      # - run: npm run build
      - name: Send telegram message after build Docker image success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Build Docker image successfully
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: Send telegram message after build fail
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Build Docker image failed
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Execute remote SSH commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          password: ${{ secrets.PASSWORD_PRODUCTION }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_PASSWORD}}
            docker pull haitrieu1811/muahangnhanh-server:v0
            docker container stop muahangnhanh-server
            docker container rm muahangnhanh-server
            docker container run --restart unless-stopped --name muahangnhanh-server -dp 4000:4000 haitrieu1811/muahangnhanh-server:v0
            docker image prune -f
          # script: |
          #   export NVM_DIR=~/.nvm
          #   source ~/.nvm/nvm.sh
          #   cd ~/muahangnhanh-server
          #   git fetch --all
          #   git reset --hard origin/main
          #   echo "${{secrets.ENV_PRODUCTION}}" > .env.production
          #   npm i --force
          #   npm run build
          #   pm2 restart MuaHangNhanhServer
      - name: Send telegram message after deploy success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Docker image deployed successfully
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: Send telegram message after deploy fail
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Docker image deployment failed
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
